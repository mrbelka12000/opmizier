version: '2'
services:

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - optimizer
    volumes:
      - redis_data:/data

  postgres:
    image: mrbelka12000/postgres_data_smaller # comment if you have linux/amd64
### image: mrbelka12000/postgres_data_smaller_linux # comment if you have amr64
    container_name: psql
    environment:
      POSTGRES_PASSWORD: mrbelka12000
      POSTGRES_USER: postgres
    command: >
      postgres
      -c shared_preload_libraries='pg_stat_statements'
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - optimizer

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: psql_exporter
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:mrbelka12000@psql:5432/optimizer?sslmode=disable"
    links:
      - postgres
      - prometheus
    networks:
      - optimizer

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prom_data:/prometheus
    networks:
      - optimizer

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: "true"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_AUTH_DISABLE_SIGNOUT_MENU: "true"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"

    restart: unless-stopped
    volumes:
      - ./monitoring/grafana:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards

    networks:
      - optimizer

  optimizer:
    container_name: basic
    build:
      dockerfile: Dockerfile
      context: .

    mem_limit: 30m
    cpuset: '4'
    depends_on:
      - redis
      - postgres
    ports:
      - "8080:8080"
    environment:
      POSTGRES_URL: "postgres://postgres:mrbelka12000@psql:5432/optimizer?sslmode=disable"
      REDIS_ADDR: "redis:6379"

    networks:
      - optimizer

volumes:
  prom_data:
  redis_data:
  postgres_data:

networks:
  optimizer:
    driver: bridge